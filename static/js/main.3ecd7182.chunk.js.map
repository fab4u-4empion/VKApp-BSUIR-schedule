{"version":3,"sources":["error_panels/errorBoundary.js","error_panels/cookiePlaceholder.js","index.js"],"names":["ErrorBoundary","props","state","hasError","networkError","window","addEventListener","setState","this","stretched","icon","fill","children","error","console","log","React","Component","CookiePlaceholder","viewWidth","useAdaptivity","header","separator","spaced","ViewWidth","MOBILE","Placeholder","bridge","send","subscribe","e","detail","type","document","body","setAttribute","data","scheme","App","lazy","Index","fallback","localStorage","setItem","ReactDOM","render","getElementById"],"mappings":"uPA2CeA,E,kDAtCX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTC,UAAU,EACVC,cAAc,GALH,E,0CAcnB,WAAU,IAAD,OAKL,OAJAC,OAAOC,iBAAiB,WAAW,WAC/B,EAAKC,SAAS,CAACH,cAAc,OAG9BI,KAAKN,MAAMC,SAEN,cAAC,IAAD,UACI,cAAC,IAAD,UACI,eAAC,IAAD,CACIM,WAAS,EACTC,KAAM,cAAC,IAAD,CAAmBC,KAAM,eAFnC,iKAIgC,uBAJhC,gVAWTH,KAAKP,MAAMW,Y,uCAzBtB,SAAgCC,GAE5B,OADAC,QAAQC,IAAIF,GACL,CAAEV,UAAU,O,GAZCa,IAAMC,W,SCoCnBC,EAzBW,WACtB,IAAQC,EAAcC,cAAdD,UAER,OACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAaE,OAAQ,cAAC,IAAD,CAAaC,WAAW,IAA7C,SACI,cAAC,IAAD,CAAUC,OAAQJ,GAAaA,EAAYK,IAAUC,OAArD,SACI,cAAC,EAAD,UACI,eAAC,IAAD,CAAaC,aAAW,EACpBjB,WAAS,EACTC,KAAM,cAAC,IAAD,CAAoBC,KAAM,eAFpC,sOAImD,uBAJnD,yICVhCgB,IAAOC,KAAK,gBAEZD,IAAOE,WAAU,SAACC,GACQ,yBAAlBA,EAAEC,OAAOC,MACTC,SAASC,KAAKC,aAAa,SAAUL,EAAEC,OAAOK,KAAKC,WAI3D,IAAMC,EAAMC,gBAAK,kBAAM,uDAEjBC,EAAQ,WACV,OACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,EAAD,UACI,cAAC,WAAD,CAAUC,SAAU,cAAC,IAAD,IAApB,SACI,cAACH,EAAD,eAS5B,IACII,aAAaC,QAAQ,OAAQ,QAC7BC,IAASC,OAAO,cAAC,EAAD,IAAUZ,SAASa,eAAe,SACpD,SACEF,IAASC,OAAO,cAAC,EAAD,IAAsBZ,SAASa,eAAe,Y","file":"static/js/main.3ecd7182.chunk.js","sourcesContent":["import { Icon56WifiOutline } from '@vkontakte/icons';\r\nimport { Placeholder, View, Panel } from '@vkontakte/vkui';\r\nimport React from 'react';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            hasError: false,\r\n            networkError: false\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        console.log(error)\r\n        return { hasError: true };\r\n    }\r\n\r\n    render() {\r\n        window.addEventListener('offline', () => {\r\n            this.setState({networkError: true})\r\n        })\r\n\r\n        if(this.state.hasError) {\r\n            return (\r\n                <View>\r\n                    <Panel>\r\n                        <Placeholder\r\n                            stretched\r\n                            icon={<Icon56WifiOutline fill={'var(--red)'}/>}\r\n                        >\r\n                            Нет подключения к интернету <br/> Включите интернет и перезагрузите приложение с очисткой кэша\r\n                        </Placeholder>\r\n                    </Panel>\r\n                </View>\r\n            )\r\n        }\r\n\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary","import React from \"react\";\r\nimport {\r\n  \tAdaptivityProvider,\r\n\tConfigProvider,\r\n\tuseAdaptivity,\r\n\tAppRoot,\r\n\tSplitLayout,\r\n\tSplitCol,\r\n\tViewWidth,\r\n\tPanelHeader,\r\n    Placeholder\r\n} from \"@vkontakte/vkui\";\r\nimport { Icon56ErrorOutline } from '@vkontakte/icons';\r\nimport ErrorBoundary from \"./errorBoundary\";\r\n\r\nconst CookiePlaceholder = () => {\r\n    const { viewWidth } = useAdaptivity()\r\n\r\n    return (\r\n        <ConfigProvider>\r\n            <AdaptivityProvider>\r\n                <AppRoot>\r\n                    <SplitLayout header={<PanelHeader separator={false} />}>\r\n                        <SplitCol spaced={viewWidth && viewWidth > ViewWidth.MOBILE}>\r\n                            <ErrorBoundary>\r\n                                <Placeholder Placeholder\r\n                                    stretched\r\n                                    icon={<Icon56ErrorOutline fill={'var(--red)'}/>}\r\n                                >\r\n                                    Сервис не может работать с выключенными Cookie <br/> или в режиме инкогнито\r\n                                </Placeholder>\r\n                            </ErrorBoundary>\r\n                        </SplitCol>\r\n                    </SplitLayout>\r\n                </AppRoot>\r\n            </AdaptivityProvider>\r\n        </ConfigProvider>\r\n    );\r\n};\r\n\r\nexport default CookiePlaceholder","import React, { Suspense, lazy } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport {\n  \tAdaptivityProvider,\n\tConfigProvider,\n\tAppRoot,\n    ScreenSpinner,\n} from \"@vkontakte/vkui\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\nimport \"./styles/styles.css\"\nimport ErrorBoundary from \"./error_panels/errorBoundary\";\nimport CookiePlaceholder from \"./error_panels/cookiePlaceholder\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nbridge.subscribe((e) => {\n    if (e.detail.type === \"VKWebAppUpdateConfig\") {\n        document.body.setAttribute(\"scheme\", e.detail.data.scheme);\n    }\n});\n\nconst App = lazy(() => import('./App'))\n\nconst Index = () => {\n    return (\n        <ConfigProvider>\n            <AdaptivityProvider>\n                <AppRoot>\n                    <ErrorBoundary>\n                        <Suspense fallback={<ScreenSpinner/>}>\n                            <App/>\n                        </Suspense>\n                    </ErrorBoundary>\n                </AppRoot>\n            </AdaptivityProvider>\n        </ConfigProvider>\n    );\n};\n\ntry {\n    localStorage.setItem('test', 'test')\n    ReactDOM.render(<Index/>, document.getElementById(\"root\"));\n} catch {\n    ReactDOM.render(<CookiePlaceholder/>, document.getElementById(\"root\"));\n}\n\n// if (process.env.NODE_ENV === \"development\") {\n// \timport(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n// }\n"],"sourceRoot":""}