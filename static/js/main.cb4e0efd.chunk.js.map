{"version":3,"sources":["components/error_panels/errorBoundary.js","components/error_panels/cookiePlaceholder.js","index.js","hooks/useLocalStorage.js","components/alerts/errorSnackbar.js","context/context.js"],"names":["ErrorBoundary","props","state","hasError","this","stretched","icon","fill","children","error","console","log","React","Component","CookiePlaceholder","viewWidth","useAdaptivity","header","separator","spaced","ViewWidth","MOBILE","Placeholder","App","lazy","Index","usePlatform","appearance","platform","webviewType","WebviewType","INTERNAL","fallback","localStorage","setItem","bridge","send","history","pushState","activeStory","searchValue","isSearch","favorites_activePanel","body_overflow","axios","get","then","response","sessionStorage","JSON","stringify","data","ReactDOM","render","document","getElementById","useLocalStorage","initialValue","key","useState","storage","getItem","parse","value","setValue","useEffect","ErrorSnackbar","message","setSnackbar","onClose","before","width","height","duration","Context","createContext","useContextProvider","useContext","СontextProvider","favoriteGroups","setFavoritesGroups","favoriteTeachers","setFavoritesTeachers","refreshGroupsErrorSnackbar","setRefreshGroupsErrorSnackbar","refreshTeachersErrorSnackbar","setRefreshTeachersErrorSnackbar","toggleGroupFavoriteFlagSnackbar","setToggleGroupFavoriteFlagSnackbar","toggleTeachreFavoriteFlagSnackbar","setToggleTeacherFavoriteFlagSnackbar","groups","setGroups","teachers","setTeachers","AbortController","loadGroupsController","loadTeachersController","errorLoadingGroupList","setErrorLoadingGroupList","errorLoadingTeachersList","setErrorLoadingTeachersList","fetchingGroups","setFetchingGroups","fetchingTeachers","setFetchingTeachers","reload","setReload","signal","catch","map","e","fullName","lastName","firstName","middleName","Provider","toggleGroupsFavoriteFlag","groupName","favoriteGroupsTemp","includes","splice","indexOf","push","toggleTeachersFavoriteFlag","teacherID","favoriteTeachersTemp","onGroupRefresh","onTeachersRefresh","closeSnackbars","onReload"],"mappings":"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","file":"static/js/main.cb4e0efd.chunk.js","sourcesContent":["import { Icon56WifiOutline } from '@vkontakte/icons';\r\nimport { Placeholder, View, Panel } from '@vkontakte/vkui';\r\nimport React from 'react';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            hasError: false,\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        console.log(error)\r\n        return { hasError: true };\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasError) {\r\n            return (\r\n                <View>\r\n                    <Panel>\r\n                        <Placeholder\r\n                            stretched\r\n                            icon={<Icon56WifiOutline fill={'var(--dynamic_red)'}/>}\r\n                        >\r\n                            Нет подключения к интернету <br/> Включите интернет и перезагрузите приложение с очисткой кэша\r\n                        </Placeholder>\r\n                    </Panel>\r\n                </View>\r\n            )\r\n        }\r\n\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary","import React from \"react\";\r\nimport {\r\n  \tAdaptivityProvider,\r\n\tConfigProvider,\r\n\tuseAdaptivity,\r\n\tAppRoot,\r\n\tSplitLayout,\r\n\tSplitCol,\r\n\tViewWidth,\r\n\tPanelHeader,\r\n    Placeholder\r\n} from \"@vkontakte/vkui\";\r\nimport { Icon56ErrorOutline } from '@vkontakte/icons';\r\nimport ErrorBoundary from \"./errorBoundary\";\r\n\r\nconst CookiePlaceholder = () => {\r\n    const { viewWidth } = useAdaptivity()\r\n\r\n    return (\r\n        <ConfigProvider>\r\n            <AdaptivityProvider>\r\n                <AppRoot>\r\n                    <SplitLayout header={<PanelHeader separator={false} />}>\r\n                        <SplitCol spaced={viewWidth && viewWidth > ViewWidth.MOBILE}>\r\n                            <Placeholder Placeholder\r\n                                stretched\r\n                                icon={<Icon56ErrorOutline fill={'var(--dynamic_red)'} />}\r\n                            >\r\n                                Сервис не может работать с выключенными Cookie <br /> или в режиме инкогнито\r\n                            </Placeholder>\r\n                        </SplitCol>\r\n                    </SplitLayout>\r\n                </AppRoot>\r\n            </AdaptivityProvider>\r\n        </ConfigProvider>\r\n    );\r\n};\r\n\r\nexport default CookiePlaceholder","import { Suspense, lazy } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {\r\n  \tAdaptivityProvider,\r\n\tConfigProvider,\r\n\tAppRoot,\r\n    ScreenSpinner,\r\n    usePlatform,\r\n    WebviewType,\r\n} from \"@vkontakte/vkui\";\r\nimport \"@vkontakte/vkui/dist/vkui.css\";\r\nimport \"./styles/styles.css\"\r\nimport ErrorBoundary from \"./components/error_panels/errorBoundary\";\r\nimport CookiePlaceholder from \"./components/error_panels/cookiePlaceholder\";\r\nimport { СontextProvider } from './context/context'\r\nimport axios from \"axios\";\r\n\r\nconst App = lazy(() => import('./App'))\r\n\r\nconst Index = () => {\r\n    const platform = usePlatform()\r\n    const appearance = \"light\"\r\n    //platform === VKCOM ? \"android\" : platform\r\n    return (\r\n        <СontextProvider>\r\n            <ConfigProvider appearance={appearance} platform=\"android\" webviewType={WebviewType.INTERNAL}>\r\n                <AdaptivityProvider>\r\n                    <AppRoot>\r\n                        <ErrorBoundary>\r\n                            <Suspense fallback={<ScreenSpinner/>}>\r\n                                <App/>\r\n                            </Suspense>\r\n                        </ErrorBoundary>\r\n                    </AppRoot>\r\n                </AdaptivityProvider>\r\n            </ConfigProvider>\r\n        </СontextProvider>\r\n    );\r\n};\r\n\r\ntry {\r\n    localStorage.setItem('test', 'test')\r\n    bridge.send(\"VKWebAppInit\");\r\n    history.pushState({\r\n        activeStory: \"favorites\",\r\n        searchValue: \"\",\r\n        isSearch: false,\r\n        favorites_activePanel: \"favorites-list\",\r\n        body_overflow: \"visible\"\r\n    }, \"\")\r\n    axios\r\n        .get(\"https://iis.bsuir.by/api/v1/schedule/current-week\")\r\n        .then(response => {\r\n            sessionStorage.setItem(\"week\", JSON.stringify(response.data))\r\n            ReactDOM.render(<Index />, document.getElementById(\"root\"));\r\n        })\r\n} catch {\r\n    ReactDOM.render(<CookiePlaceholder/>, document.getElementById(\"root\"));\r\n}\r\n\r\n//import(\"./eruda\").then(({ default: eruda }) => { }); //runtime download\r\n\r\n// if (process.env.NODE_ENV === \"development\") {\r\n// \timport(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\r\n// }\r\n","import { useEffect, useState } from \"react\"\r\n\r\nexport const useLocalStorage = (initialValue, key) => {\r\n    const getValue = () => {\r\n        const storage = localStorage.getItem(key)\r\n        if (storage) {\r\n            return JSON.parse(storage)\r\n        }\r\n        return initialValue\r\n    }\r\n\r\n    const [value, setValue] = useState(getValue)\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(key, JSON.stringify(value))\r\n    }, [value])\r\n\r\n    return [value, setValue]\r\n}","import { Icon16CancelCircleOutline } from \"@vkontakte/icons\"\r\nimport { Snackbar } from \"@vkontakte/vkui\"\r\n\r\nexport const ErrorSnackbar = ({ message, setSnackbar }) => {\r\n    return (\r\n        <Snackbar\r\n            onClose={() => { setSnackbar(null) }}\r\n            before={<Icon16CancelCircleOutline fill=\"var(--dynamic_red)\" width={24} height={24} />}\r\n            duration={1700}\r\n        >\r\n            {message}\r\n        </Snackbar>\r\n    )\r\n}","import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport bridge from \"@vkontakte/vk-bridge\"\r\nimport { ErrorSnackbar } from \"../components/alerts/errorSnackbar\";\r\nimport { useLocalStorage } from \"../hooks/useLocalStorage\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = createContext()\r\n\r\nexport const useContextProvider = () => {\r\n    return useContext(Context)\r\n}\r\n\r\nexport const СontextProvider = ({ children }) => {\r\n    const [favoriteGroups, setFavoritesGroups] = useLocalStorage([], \"groupsFavorite\")\r\n    const [favoriteTeachers, setFavoritesTeachers] = useLocalStorage([], \"teachersFavorite\")\r\n\r\n    const [refreshGroupsErrorSnackbar, setRefreshGroupsErrorSnackbar] = useState(null)\r\n    const [refreshTeachersErrorSnackbar, setRefreshTeachersErrorSnackbar] = useState(null)\r\n\r\n    const [toggleGroupFavoriteFlagSnackbar, setToggleGroupFavoriteFlagSnackbar] = useState(null)\r\n    const [toggleTeachreFavoriteFlagSnackbar, setToggleTeacherFavoriteFlagSnackbar] = useState(null)\r\n\r\n    const [groups, setGroups] = useLocalStorage(null, \"groups\")\r\n    const [teachers, setTeachers] = useLocalStorage(null, \"teachers\")\r\n\r\n    const [loadGroupsController] = useState(new AbortController())\r\n    const [loadTeachersController] = useState(new AbortController())\r\n\r\n    const [errorLoadingGroupList, setErrorLoadingGroupList] = useState(false)\r\n    const [errorLoadingTeachersList, setErrorLoadingTeachersList] = useState(false)\r\n\r\n    const [fetchingGroups, setFetchingGroups] = useState(false)\r\n    const [fetchingTeachers, setFetchingTeachers] = useState(false)\r\n\r\n    const [reload, setReload] = useState(false)\r\n    \r\n    useEffect(() => {\r\n        if (!groups) {\r\n            axios\r\n                .get(\"https://iis.bsuir.by/api/v1/student-groups\", {\r\n                    signal: loadGroupsController.signal\r\n                })\r\n                .then(response => {\r\n                    setGroups(response.data)\r\n                })\r\n                .catch(() => {\r\n                    setErrorLoadingGroupList(true)\r\n                })\r\n        }\r\n    }, [,reload])\r\n\r\n    useEffect(() => {\r\n        if (!teachers) {\r\n            axios\r\n                .get(\"https://iis.bsuir.by/api/v1/employees/all\", {\r\n                    signal: loadTeachersController.signal\r\n                })\r\n                .then(response => {\r\n                    const data = response.data.map(e => {\r\n                        e.fullName = e.lastName + \" \" + e.firstName + \" \" + e.middleName\r\n                        return e\r\n                    })\r\n                    setTeachers(data)\r\n                })\r\n                .catch(() => {\r\n                    setErrorLoadingTeachersList(true)\r\n                })\r\n        }\r\n    }, [,reload])\r\n\r\n    const onReload = () => {\r\n        setErrorLoadingTeachersList(false)\r\n        setErrorLoadingGroupList(false)\r\n        setReload(!reload)\r\n    }\r\n\r\n    const onGroupRefresh = () => {\r\n        setFetchingGroups(true)\r\n        axios\r\n            .get(\"https://iis.bsuir.by/api/v1/student-groups\")\r\n            .then(response => {\r\n                setGroups(response.data)\r\n                setErrorLoadingGroupList(false)\r\n                setFetchingGroups(false)\r\n            })\r\n            .catch(() => {\r\n                setFetchingGroups(false)\r\n                setRefreshGroupsErrorSnackbar(<ErrorSnackbar message={\"Не удалось обновить список групп\"} setSnackbar={setRefreshGroupsErrorSnackbar} />)\r\n            })\r\n    }\r\n\r\n    const onTeachersRefresh = () => {\r\n        setFetchingTeachers(true)\r\n        axios\r\n            .get(\"https://iis.bsuir.by/api/v1/employees/all\")\r\n            .then(response => {\r\n                const data = response.data.map(e => {\r\n                    e.fullName = e.lastName + \" \" + e.firstName + \" \" + e.middleName\r\n                    return e\r\n                })\r\n                setTeachers(data)\r\n                setErrorLoadingTeachersList(false)\r\n                setFetchingTeachers(false)\r\n            })\r\n            .catch(() => {\r\n                setFetchingTeachers(false)\r\n                setRefreshTeachersErrorSnackbar(<ErrorSnackbar message={\"Не удалось обновить список преподавателей\"} setSnackbar={setRefreshTeachersErrorSnackbar} />)\r\n            })\r\n    }\r\n\r\n    const toggleGroupsFavoriteFlag = groupName => {\r\n        let favoriteGroupsTemp = [...favoriteGroups]\r\n        if (favoriteGroupsTemp.includes(groupName)) {\r\n            favoriteGroupsTemp.splice(favoriteGroupsTemp.indexOf(groupName), 1)\r\n        } else {\r\n            favoriteGroupsTemp.push(groupName)\r\n        }\r\n\r\n        setFavoritesGroups(favoriteGroupsTemp)\r\n    }\r\n\r\n    const toggleTeachersFavoriteFlag = teacherID => {\r\n        let favoriteTeachersTemp = [...favoriteTeachers]\r\n        if (favoriteTeachersTemp.includes(teacherID)) {\r\n            favoriteTeachersTemp.splice(favoriteTeachersTemp.indexOf(teacherID), 1)\r\n        } else {\r\n            favoriteTeachersTemp.push(teacherID)\r\n        }\r\n\r\n        setFavoritesTeachers(favoriteTeachersTemp)\r\n    }\r\n\r\n    const closeSnackbars = () => {\r\n        setRefreshGroupsErrorSnackbar(null)\r\n        setToggleGroupFavoriteFlagSnackbar(null)\r\n        setToggleTeacherFavoriteFlagSnackbar(null)\r\n        setRefreshTeachersErrorSnackbar(null)\r\n    }\r\n\r\n    return (\r\n        <Context.Provider value={{\r\n            favoriteGroups,\r\n            favoriteTeachers,\r\n            groups,\r\n            teachers,\r\n            errorLoadingGroupList,\r\n            errorLoadingTeachersList,\r\n            fetchingGroups,\r\n            fetchingTeachers,\r\n            toggleGroupsFavoriteFlag,\r\n            toggleTeachersFavoriteFlag,\r\n            onGroupRefresh,\r\n            onTeachersRefresh,\r\n            toggleGroupFavoriteFlagSnackbar,\r\n            toggleTeachreFavoriteFlagSnackbar,\r\n            refreshGroupsErrorSnackbar,\r\n            refreshTeachersErrorSnackbar,\r\n            closeSnackbars,\r\n            onReload\r\n        }}>\r\n            { children }\r\n        </Context.Provider>\r\n    )\r\n}  "],"sourceRoot":""}