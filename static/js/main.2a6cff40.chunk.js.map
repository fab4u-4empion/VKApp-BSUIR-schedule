{"version":3,"sources":["error_panels/errorBoundary.js","error_panels/cookiePlaceholder.js","index.js","context/context.js"],"names":["ErrorBoundary","props","state","hasError","this","stretched","icon","fill","children","error","console","log","React","Component","CookiePlaceholder","viewWidth","useAdaptivity","header","separator","spaced","ViewWidth","MOBILE","Placeholder","App","lazy","Index","fallback","localStorage","setItem","sessionStorage","JSON","stringify","bridge","send","then","e","keys","value","subscribe","detail","type","document","body","setAttribute","data","scheme","ReactDOM","render","getElementById","default","Context","createContext","useContextProvider","useContext","СontextProvider","useState","parse","getItem","favoriteGroups","setFavoritesGroups","snackbar","setSnackbar","Provider","toggleGroupsFavoriteFlag","groupName","favoriteGroupsTemp","errorSnackbar","includes","splice","indexOf","onClose","before","width","height","duration","push","catch"],"mappings":"uPAsCeA,E,kDAjCX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTC,UAAU,GAJC,E,0CAanB,WACI,OAAGC,KAAKF,MAAMC,SAEN,cAAC,IAAD,UACI,cAAC,IAAD,UACI,eAAC,IAAD,CACIE,WAAS,EACTC,KAAM,cAAC,IAAD,CAAmBC,KAAM,uBAFnC,iKAIgC,uBAJhC,gVAWTH,KAAKH,MAAMO,Y,uCArBtB,SAAgCC,GAE5B,OADAC,QAAQC,IAAIF,GACL,CAAEN,UAAU,O,GAXCS,IAAMC,W,SCkCnBC,EAvBW,WACtB,IAAQC,EAAcC,cAAdD,UAER,OACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAaE,OAAQ,cAAC,IAAD,CAAaC,WAAW,IAA7C,SACI,cAAC,IAAD,CAAUC,OAAQJ,GAAaA,EAAYK,IAAUC,OAArD,SACI,eAAC,IAAD,CAAaC,aAAW,EACpBjB,WAAS,EACTC,KAAM,cAAC,IAAD,CAAoBC,KAAM,uBAFpC,sOAImD,uBAJnD,uI,QCTtBgB,EAAMC,gBAAK,kBAAM,uDAEjBC,EAAQ,WACV,OACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,EAAD,UACI,cAAC,WAAD,CAAUC,SAAU,cAAC,IAAD,IAApB,SACI,cAACH,EAAD,iBAUhC,IACII,aAAaC,QAAQ,OAAQ,QAC7BC,eAAeD,QAAQ,iBAAkBE,KAAKC,UAAU,KACxDC,IACKC,KAAK,qBAAsB,CAAE,KAAQ,CAAC,oBACtCC,MAAK,SAAAC,GACEA,EAAEC,KAAK,GAAGC,OACVR,eAAeD,QAAQ,iBAAkBO,EAAEC,KAAK,GAAGC,OAEvDL,IAAOC,KAAK,gBAEZD,IAAOM,WAAU,SAACH,GACQ,yBAAlBA,EAAEI,OAAOC,MACTC,SAASC,KAAKC,aAAa,SAAUR,EAAEI,OAAOK,KAAKC,WAG3DC,IAASC,OAAO,cAAC,EAAD,IAAWN,SAASO,eAAe,YAG7D,SACEF,IAASC,OAAO,cAAC,EAAD,IAAsBN,SAASO,eAAe,SAGlE,oDAAkBd,MAAK,YAAwB,EAArBe,Y,uKCrDpBC,EAAUC,0BAEHC,EAAqB,WAC9B,OAAOC,qBAAWH,IAGTI,EAAkB,SAAC,GAAkB,IAAhB9C,EAAe,EAAfA,SAC9B,EAA6C+C,mBAASzB,KAAK0B,MAAM3B,eAAe4B,QAAQ,oBAAxF,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAAgCJ,mBAAS,MAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAqCA,OACI,cAACX,EAAQY,SAAT,CAAkBzB,MAAO,CACrBqB,eAAgBA,EAChBE,SAAUA,EACVG,yBAvCyB,SAAAC,GAC7B,IAAIC,EAAkB,YAAOP,GACzBQ,EAAgB,KAChBD,EAAmBE,SAASH,IAC5BC,EAAmBG,OAAOH,EAAmBI,QAAQL,GAAY,GACjEE,EACI,cAAC,IAAD,CACII,QAAS,aACTC,OAAQ,cAAC,IAAD,CAA2BhE,KAAK,qBAAqBiE,MAAO,GAAIC,OAAQ,KAChFC,SAAU,KAHd,6NASJT,EAAmBU,KAAKX,GACxBE,EACI,cAAC,IAAD,CACII,QAAS,aACTC,OAAQ,cAAC,IAAD,CAA2BhE,KAAK,qBAAqBiE,MAAO,GAAIC,OAAQ,KAChFC,SAAU,KAHd,4NAQR1C,IACKC,KAAK,qBAAsB,CAAE,IAAO,iBAAkB,MAASH,KAAKC,UAAUkC,KAC9E/B,MAAK,WACFyB,EAAmBM,MAEtBW,OAAM,WACHf,EAAYK,QAKpB,SAKM1D,O","file":"static/js/main.2a6cff40.chunk.js","sourcesContent":["import { Icon56WifiOutline } from '@vkontakte/icons';\r\nimport { Placeholder, View, Panel } from '@vkontakte/vkui';\r\nimport React from 'react';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            hasError: false,\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        console.log(error)\r\n        return { hasError: true };\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasError) {\r\n            return (\r\n                <View>\r\n                    <Panel>\r\n                        <Placeholder\r\n                            stretched\r\n                            icon={<Icon56WifiOutline fill={'var(--dynamic_red)'}/>}\r\n                        >\r\n                            Нет подключения к интернету <br/> Включите интернет и перезагрузите приложение с очисткой кэша\r\n                        </Placeholder>\r\n                    </Panel>\r\n                </View>\r\n            )\r\n        }\r\n\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary","import React from \"react\";\r\nimport {\r\n  \tAdaptivityProvider,\r\n\tConfigProvider,\r\n\tuseAdaptivity,\r\n\tAppRoot,\r\n\tSplitLayout,\r\n\tSplitCol,\r\n\tViewWidth,\r\n\tPanelHeader,\r\n    Placeholder\r\n} from \"@vkontakte/vkui\";\r\nimport { Icon56ErrorOutline } from '@vkontakte/icons';\r\nimport ErrorBoundary from \"./errorBoundary\";\r\n\r\nconst CookiePlaceholder = () => {\r\n    const { viewWidth } = useAdaptivity()\r\n\r\n    return (\r\n        <ConfigProvider>\r\n            <AdaptivityProvider>\r\n                <AppRoot>\r\n                    <SplitLayout header={<PanelHeader separator={false} />}>\r\n                        <SplitCol spaced={viewWidth && viewWidth > ViewWidth.MOBILE}>\r\n                            <Placeholder Placeholder\r\n                                stretched\r\n                                icon={<Icon56ErrorOutline fill={'var(--dynamic_red)'} />}\r\n                            >\r\n                                Сервис не может работать с выключенными Cookie <br /> или в режиме инкогнито\r\n                            </Placeholder>\r\n                        </SplitCol>\r\n                    </SplitLayout>\r\n                </AppRoot>\r\n            </AdaptivityProvider>\r\n        </ConfigProvider>\r\n    );\r\n};\r\n\r\nexport default CookiePlaceholder","import React, { Suspense, lazy } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport {\n  \tAdaptivityProvider,\n\tConfigProvider,\n\tAppRoot,\n    ScreenSpinner,\n} from \"@vkontakte/vkui\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\nimport \"./styles/styles.css\"\nimport ErrorBoundary from \"./error_panels/errorBoundary\";\nimport CookiePlaceholder from \"./error_panels/cookiePlaceholder\";\nimport { СontextProvider } from './context/context'\n\nconst App = lazy(() => import('./App'))\n\nconst Index = () => {\n    return (\n        <СontextProvider>\n            <ConfigProvider>\n                <AdaptivityProvider>\n                    <AppRoot>\n                        <ErrorBoundary>\n                            <Suspense fallback={<ScreenSpinner/>}>\n                                <App/>\n                            </Suspense>\n                        </ErrorBoundary>\n                    </AppRoot>\n                </AdaptivityProvider>\n            </ConfigProvider>\n        </СontextProvider>\n    );\n};\n\ntry {\n    localStorage.setItem('test', 'test')\n    sessionStorage.setItem(\"groupsFavorite\", JSON.stringify([]))\n    bridge\n        .send(\"VKWebAppStorageGet\", { \"keys\": [\"groupsFavorite\"] })\n        .then(e => {\n            if (e.keys[0].value) {\n                sessionStorage.setItem(\"groupsFavorite\", e.keys[0].value)\n            }\n            bridge.send(\"VKWebAppInit\");\n\n            bridge.subscribe((e) => {\n                if (e.detail.type === \"VKWebAppUpdateConfig\") {\n                    document.body.setAttribute(\"scheme\", e.detail.data.scheme);\n                }\n            });\n            ReactDOM.render(<Index />, document.getElementById(\"root\"));\n        })\n    //ReactDOM.render(<Index/>, document.getElementById(\"root\"));\n} catch {\n    ReactDOM.render(<CookiePlaceholder/>, document.getElementById(\"root\"));\n}\n\nimport(\"./eruda\").then(({ default: eruda }) => { }); //runtime download\n\n// if (process.env.NODE_ENV === \"development\") {\n// \timport(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n// }\n","import { createContext, useContext, useReducer, useState } from \"react\";\r\nimport bridge from \"@vkontakte/vk-bridge\"\r\nimport { Snackbar } from \"@vkontakte/vkui\"\r\nimport { Icon16CancelCircleOutline } from \"@vkontakte/icons\"\r\n\r\nconst Context = createContext()\r\n\r\nexport const useContextProvider = () => {\r\n    return useContext(Context)\r\n}\r\n\r\nexport const СontextProvider = ({ children }) => {\r\n    const [favoriteGroups, setFavoritesGroups] = useState(JSON.parse(sessionStorage.getItem(\"groupsFavorite\")))\r\n    const [snackbar, setSnackbar] = useState(null)\r\n\r\n    const toggleGroupsFavoriteFlag = groupName => {\r\n        let favoriteGroupsTemp = [...favoriteGroups]\r\n        let errorSnackbar = null\r\n        if (favoriteGroupsTemp.includes(groupName)) {\r\n            favoriteGroupsTemp.splice(favoriteGroupsTemp.indexOf(groupName), 1)\r\n            errorSnackbar =\r\n                <Snackbar\r\n                    onClose={() => { }}\r\n                    before={<Icon16CancelCircleOutline fill=\"var(--dynamic_red)\" width={24} height={24} />}\r\n                    duration={1700}\r\n                >\r\n                    Не удалось удалить группу из \"Избранное\"\r\n                </Snackbar>\r\n\r\n        } else {\r\n            favoriteGroupsTemp.push(groupName)\r\n            errorSnackbar =\r\n                <Snackbar\r\n                    onClose={() => { }}\r\n                    before={<Icon16CancelCircleOutline fill=\"var(--dynamic_red)\" width={24} height={24} />}\r\n                    duration={1700}\r\n                >\r\n                    Не удалось добавить группу в \"Избранное\"\r\n                </Snackbar>\r\n        }\r\n        bridge\r\n            .send(\"VKWebAppStorageSet\", { \"key\": \"groupsFavorite\", \"value\": JSON.stringify(favoriteGroupsTemp) })\r\n            .then(() => {\r\n                setFavoritesGroups(favoriteGroupsTemp)\r\n            })\r\n            .catch(() => {\r\n                setSnackbar(errorSnackbar)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Context.Provider value={{\r\n            favoriteGroups: favoriteGroups,\r\n            snackbar: snackbar,\r\n            toggleGroupsFavoriteFlag\r\n        }}>\r\n            { children }\r\n        </Context.Provider>\r\n    )\r\n}  "],"sourceRoot":""}