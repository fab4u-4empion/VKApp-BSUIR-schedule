{"version":3,"sources":["components/error_panels/errorBoundary.js","components/error_panels/cookiePlaceholder.js","index.js","components/alerts/errorSnackbar.js","context/context.js","hooks/useLocalStorage.js"],"names":["ErrorBoundary","props","state","hasError","this","stretched","icon","fill","children","error","console","log","React","Component","CookiePlaceholder","viewWidth","useAdaptivity","header","separator","spaced","ViewWidth","MOBILE","Placeholder","App","lazy","Index","platform","usePlatform","VKCOM","fallback","localStorage","setItem","sessionStorage","JSON","stringify","bridge","send","then","e","keys","value","subscribe","detail","type","document","body","setAttribute","data","scheme","history","pushState","activeStory","searchValue","isSearch","favorites_activePanel","body_overflow","ReactDOM","render","getElementById","default","ErrorSnackbar","message","setSnackbar","onClose","before","width","height","duration","Context","createContext","useContextProvider","useContext","СontextProvider","useState","parse","getItem","favoriteGroups","setFavoritesGroups","favoriteTeachers","setFavoritesTeachers","refreshErrorSnackbar","setRefreshErrorSnackbar","toggleGroupFavoriteFlagSnackbar","setToggleGroupFavoriteFlagSnackbar","initialValue","key","storage","setValue","useEffect","useLocalStorage","groups","setGroups","AbortController","controller","errorLoadingGroupList","setErrorLoadingGroupList","fetchingGroups","setFetchingGroups","axios","get","signal","response","catch","abort","fetchingGroupController","Provider","toggleGroupsFavoriteFlag","groupName","favoriteGroupsTemp","errorMessage","includes","splice","indexOf","push","toggleTeachersFavoriteFlag","teacherID","favoriteTeachersTemp","onGroupRefresh","closeSnackbars"],"mappings":"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","file":"static/js/main.18191cf7.chunk.js","sourcesContent":["import { Icon56WifiOutline } from '@vkontakte/icons';\r\nimport { Placeholder, View, Panel } from '@vkontakte/vkui';\r\nimport React from 'react';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            hasError: false,\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        console.log(error)\r\n        return { hasError: true };\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasError) {\r\n            return (\r\n                <View>\r\n                    <Panel>\r\n                        <Placeholder\r\n                            stretched\r\n                            icon={<Icon56WifiOutline fill={'var(--dynamic_red)'}/>}\r\n                        >\r\n                            Нет подключения к интернету <br/> Включите интернет и перезагрузите приложение с очисткой кэша\r\n                        </Placeholder>\r\n                    </Panel>\r\n                </View>\r\n            )\r\n        }\r\n\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary","import React from \"react\";\r\nimport {\r\n  \tAdaptivityProvider,\r\n\tConfigProvider,\r\n\tuseAdaptivity,\r\n\tAppRoot,\r\n\tSplitLayout,\r\n\tSplitCol,\r\n\tViewWidth,\r\n\tPanelHeader,\r\n    Placeholder\r\n} from \"@vkontakte/vkui\";\r\nimport { Icon56ErrorOutline } from '@vkontakte/icons';\r\nimport ErrorBoundary from \"./errorBoundary\";\r\n\r\nconst CookiePlaceholder = () => {\r\n    const { viewWidth } = useAdaptivity()\r\n\r\n    return (\r\n        <ConfigProvider>\r\n            <AdaptivityProvider>\r\n                <AppRoot>\r\n                    <SplitLayout header={<PanelHeader separator={false} />}>\r\n                        <SplitCol spaced={viewWidth && viewWidth > ViewWidth.MOBILE}>\r\n                            <Placeholder Placeholder\r\n                                stretched\r\n                                icon={<Icon56ErrorOutline fill={'var(--dynamic_red)'} />}\r\n                            >\r\n                                Сервис не может работать с выключенными Cookie <br /> или в режиме инкогнито\r\n                            </Placeholder>\r\n                        </SplitCol>\r\n                    </SplitLayout>\r\n                </AppRoot>\r\n            </AdaptivityProvider>\r\n        </ConfigProvider>\r\n    );\r\n};\r\n\r\nexport default CookiePlaceholder","import React, { Suspense, lazy } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport {\n  \tAdaptivityProvider,\n\tConfigProvider,\n\tAppRoot,\n    ScreenSpinner,\n    usePlatform,\n    VKCOM\n} from \"@vkontakte/vkui\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\nimport \"./styles/styles.css\"\nimport ErrorBoundary from \"./components/error_panels/errorBoundary\";\nimport CookiePlaceholder from \"./components/error_panels/cookiePlaceholder\";\nimport { СontextProvider } from './context/context'\n\nconst App = lazy(() => import('./App'))\n\nconst Index = () => {\n    const platform = usePlatform()\n    return (\n        <СontextProvider>\n            <ConfigProvider platform={platform === VKCOM ? \"android\" : platform}>\n                <AdaptivityProvider>\n                    <AppRoot>\n                        <ErrorBoundary>\n                            <Suspense fallback={<ScreenSpinner/>}>\n                                <App/>\n                            </Suspense>\n                        </ErrorBoundary>\n                    </AppRoot>\n                </AdaptivityProvider>\n            </ConfigProvider>\n        </СontextProvider>\n    );\n};\n\ntry {\n    localStorage.setItem('test', 'test')\n    sessionStorage.setItem(\"groupsFavorite\", JSON.stringify([]))\n    sessionStorage.setItem(\"teachersFavorite\", JSON.stringify([]))\n    bridge\n        .send(\"VKWebAppStorageGet\", { \"keys\": [\"groupsFavorite\", \"teachersFavorite\"] })\n        .then(e => {\n            console.log(e);\n            if (e.keys[0].value) {\n                sessionStorage.setItem(\"groupsFavorite\", e.keys[0].value)\n            }\n            if (e.keys[1].value) {\n                sessionStorage.setItem(\"teachersFavorite\", e.keys[1].value)\n            }\n            bridge.send(\"VKWebAppInit\");\n\n            bridge.subscribe((e) => {\n                if (e.detail.type === \"VKWebAppUpdateConfig\") {\n                    document.body.setAttribute(\"scheme\", e.detail.data.scheme);\n                }\n            });\n            history.pushState({\n                activeStory: \"favorites\",\n                searchValue: \"\",\n                isSearch: false,\n                favorites_activePanel: \"favorites-list\",\n                body_overflow: \"visible\"\n            }, \"\")\n            ReactDOM.render(<Index />, document.getElementById(\"root\"));\n        })\n    // history.pushState({\n    //     activeStory: \"favorites\",\n    //     searchValue: \"\",\n    //     isSearch: false,\n    //     favorites_activePanel: \"favorites-list\",\n    //     body_overflow: \"visible\"\n    // }, \"\")\n    // ReactDOM.render(<Index/>, document.getElementById(\"root\"));\n} catch {\n    ReactDOM.render(<CookiePlaceholder/>, document.getElementById(\"root\"));\n}\n\nimport(\"./eruda\").then(({ default: eruda }) => { }); //runtime download\n\n// if (process.env.NODE_ENV === \"development\") {\n// \timport(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n// }\n","import { Icon16CancelCircleOutline } from \"@vkontakte/icons\"\r\nimport { Snackbar } from \"@vkontakte/vkui\"\r\n\r\nexport const ErrorSnackbar = ({ message, setSnackbar }) => {\r\n    return (\r\n        <Snackbar\r\n            onClose={() => { setSnackbar(null) }}\r\n            before={<Icon16CancelCircleOutline fill=\"var(--dynamic_red)\" width={24} height={24} />}\r\n            duration={1700}\r\n        >\r\n            {message}\r\n        </Snackbar>\r\n    )\r\n}","import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport bridge from \"@vkontakte/vk-bridge\"\r\nimport { ErrorSnackbar } from \"../components/alerts/errorSnackbar\";\r\nimport { useLocalStorage } from \"../hooks/useLocalStorage\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = createContext()\r\n\r\nexport const useContextProvider = () => {\r\n    return useContext(Context)\r\n}\r\n\r\nexport const СontextProvider = ({ children }) => {\r\n    const [favoriteGroups, setFavoritesGroups] = useState(JSON.parse(sessionStorage.getItem(\"groupsFavorite\")))\r\n    const [favoriteTeachers, setFavoritesTeachers] = useState(JSON.parse(sessionStorage.getItem(\"teachersFavorite\")))\r\n    const [refreshErrorSnackbar, setRefreshErrorSnackbar] = useState(null)\r\n    const [toggleGroupFavoriteFlagSnackbar, setToggleGroupFavoriteFlagSnackbar] = useState(null)\r\n    const [groups, setGroups] = useLocalStorage(null, \"groups\")\r\n    const [controller] = useState(new AbortController())\r\n    const [errorLoadingGroupList, setErrorLoadingGroupList] = useState(false)\r\n    const [fetchingGroups, setFetchingGroups] = useState(false)\r\n    \r\n    useEffect(() => {\r\n        if (!groups) {\r\n            axios\r\n                .get(\"https://iis.bsuir.by/api/v1/student-groups\", {\r\n                    signal: controller.signal\r\n                })\r\n                .then(response => {\r\n                    setGroups(response.data)\r\n                })\r\n                .catch(() => {\r\n                    setErrorLoadingGroupList(true)\r\n                })\r\n        }\r\n    }, [])\r\n\r\n    const onGroupRefresh = () => {\r\n        setFetchingGroups(true)\r\n        axios\r\n            .get(\"https://iis.bsuir.by/api/v1/student-groups\")\r\n            .then(response => {\r\n                setGroups(response.data)\r\n                setErrorLoadingGroupList(false)\r\n                setFetchingGroups(false)\r\n            })\r\n            .catch(() => {\r\n                setFetchingGroups(false)\r\n                setRefreshErrorSnackbar(<ErrorSnackbar message={\"Не удалось обновить список групп\"} setSnackbar={setRefreshErrorSnackbar} />)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        return function () {\r\n            controller.abort()\r\n            fetchingGroupController.abort()\r\n        }\r\n    }, [])\r\n\r\n    const toggleGroupsFavoriteFlag = groupName => {\r\n        let favoriteGroupsTemp = [...favoriteGroups]\r\n        let errorMessage = \"\"\r\n        if (favoriteGroupsTemp.includes(groupName)) {\r\n            favoriteGroupsTemp.splice(favoriteGroupsTemp.indexOf(groupName), 1)\r\n            errorMessage = 'Не удалось удалить группу из \"Избранное\"'\r\n        } else {\r\n            favoriteGroupsTemp.push(groupName)\r\n            errorMessage = 'Не удалось добавить группу в \"Избранное\"'\r\n        }\r\n\r\n        bridge\r\n            .send(\"VKWebAppStorageSet\", { \"key\": \"groupsFavorite\", \"value\": JSON.stringify(favoriteGroupsTemp) })\r\n            .then(() => {\r\n                setFavoritesGroups(favoriteGroupsTemp)\r\n            })\r\n            .catch(() => {\r\n                setToggleGroupFavoriteFlagSnackbar(<ErrorSnackbar message={errorMessage} setSnackbar={setToggleGroupFavoriteFlagSnackbar}/>)\r\n            })\r\n    }\r\n\r\n    const toggleTeachersFavoriteFlag = teacherID => {\r\n        let favoriteTeachersTemp = [...favoriteTeachers]\r\n        let errorMessage = \"\"\r\n        if (favoriteTeachersTemp.includes(teacherID)) {\r\n            favoriteTeachersTemp.splice(favoriteTeachersTemp.indexOf(teacherID), 1)\r\n            errorMessage = 'Не удалось удалить преподавателя из \"Избранное\"' \r\n        } else {\r\n            favoriteTeachersTemp.push(teacherID)\r\n            errorMessage = 'Не удалось добавить преподавателя в \"Избранное\"' \r\n        }\r\n        bridge\r\n            .send(\"VKWebAppStorageSet\", { \"key\": \"teachersFavorite\", \"value\": JSON.stringify(favoriteTeachersTemp) })\r\n            .then(() => {\r\n                setFavoritesTeachers(favoriteTeachersTemp)\r\n            })\r\n            // .catch(() => {\r\n            //     setSnackbar(<ErrorSnackbar message={errorMessage} setSnackbar={setSnackbar} />)\r\n            // })\r\n    }\r\n\r\n    const closeSnackbars = () => {\r\n        setRefreshErrorSnackbar(null)\r\n        setToggleGroupFavoriteFlagSnackbar(null)\r\n    }\r\n\r\n    return (\r\n        <Context.Provider value={{\r\n            favoriteGroups,\r\n            favoriteTeachers,\r\n            groups,\r\n            errorLoadingGroupList: errorLoadingGroupList,\r\n            fetchingGroups,\r\n            toggleGroupsFavoriteFlag,\r\n            toggleTeachersFavoriteFlag,\r\n            onGroupRefresh,\r\n            toggleGroupFavoriteFlagSnackbar,\r\n            refreshErrorSnackbar,\r\n            closeSnackbars\r\n        }}>\r\n            { children }\r\n        </Context.Provider>\r\n    )\r\n}  ","import { useEffect, useState } from \"react\"\r\n\r\nexport const useLocalStorage = (initialValue, key) => {\r\n    const getValue = () => {\r\n        const storage = localStorage.getItem(key)\r\n        if (storage) {\r\n            return JSON.parse(storage)\r\n        }\r\n        return initialValue\r\n    }\r\n\r\n    const [value, setValue] = useState(getValue)\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(key, JSON.stringify(value))\r\n    }, value)\r\n\r\n    return [value, setValue]\r\n}"],"sourceRoot":""}