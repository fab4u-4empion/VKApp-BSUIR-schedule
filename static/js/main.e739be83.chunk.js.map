{"version":3,"sources":["components/error_panels/errorBoundary.js","components/error_panels/cookiePlaceholder.js","index.js","hooks/useLocalStorage.js","components/alerts/errorSnackbar.js","context/context.js"],"names":["ErrorBoundary","props","state","hasError","this","stretched","icon","fill","children","error","console","log","React","Component","CookiePlaceholder","viewWidth","useAdaptivity","header","separator","spaced","ViewWidth","MOBILE","Placeholder","App","lazy","Index","platform","usePlatform","appearance","useAppearance","VKCOM","fallback","localStorage","setItem","sessionStorage","JSON","stringify","bridge","send","then","e","keys","value","history","pushState","activeStory","searchValue","isSearch","favorites_activePanel","body_overflow","axios","get","response","data","ReactDOM","render","document","getElementById","default","useLocalStorage","initialValue","key","useState","storage","getItem","parse","setValue","useEffect","ErrorSnackbar","message","setSnackbar","onClose","before","width","height","duration","Context","createContext","useContextProvider","useContext","СontextProvider","favoriteGroups","setFavoritesGroups","favoriteTeachers","setFavoritesTeachers","refreshGroupsErrorSnackbar","setRefreshGroupsErrorSnackbar","refreshTeachersErrorSnackbar","setRefreshTeachersErrorSnackbar","toggleGroupFavoriteFlagSnackbar","setToggleGroupFavoriteFlagSnackbar","toggleTeachreFavoriteFlagSnackbar","setToggleTeacherFavoriteFlagSnackbar","groups","setGroups","teachers","setTeachers","AbortController","loadGroupsController","loadTeachersController","errorLoadingGroupList","setErrorLoadingGroupList","errorLoadingTeachersList","setErrorLoadingTeachersList","fetchingGroups","setFetchingGroups","fetchingTeachers","setFetchingTeachers","reload","setReload","signal","catch","map","fullName","lastName","firstName","middleName","Provider","toggleGroupsFavoriteFlag","groupName","favoriteGroupsTemp","errorMessage","includes","splice","indexOf","push","toggleTeachersFavoriteFlag","teacherID","favoriteTeachersTemp","onGroupRefresh","onTeachersRefresh","closeSnackbars","onReload"],"mappings":"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","file":"static/js/main.e739be83.chunk.js","sourcesContent":["import { Icon56WifiOutline } from '@vkontakte/icons';\r\nimport { Placeholder, View, Panel } from '@vkontakte/vkui';\r\nimport React from 'react';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            hasError: false,\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        console.log(error)\r\n        return { hasError: true };\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasError) {\r\n            return (\r\n                <View>\r\n                    <Panel>\r\n                        <Placeholder\r\n                            stretched\r\n                            icon={<Icon56WifiOutline fill={'var(--dynamic_red)'}/>}\r\n                        >\r\n                            Нет подключения к интернету <br/> Включите интернет и перезагрузите приложение с очисткой кэша\r\n                        </Placeholder>\r\n                    </Panel>\r\n                </View>\r\n            )\r\n        }\r\n\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary","import React from \"react\";\r\nimport {\r\n  \tAdaptivityProvider,\r\n\tConfigProvider,\r\n\tuseAdaptivity,\r\n\tAppRoot,\r\n\tSplitLayout,\r\n\tSplitCol,\r\n\tViewWidth,\r\n\tPanelHeader,\r\n    Placeholder\r\n} from \"@vkontakte/vkui\";\r\nimport { Icon56ErrorOutline } from '@vkontakte/icons';\r\nimport ErrorBoundary from \"./errorBoundary\";\r\n\r\nconst CookiePlaceholder = () => {\r\n    const { viewWidth } = useAdaptivity()\r\n\r\n    return (\r\n        <ConfigProvider>\r\n            <AdaptivityProvider>\r\n                <AppRoot>\r\n                    <SplitLayout header={<PanelHeader separator={false} />}>\r\n                        <SplitCol spaced={viewWidth && viewWidth > ViewWidth.MOBILE}>\r\n                            <Placeholder Placeholder\r\n                                stretched\r\n                                icon={<Icon56ErrorOutline fill={'var(--dynamic_red)'} />}\r\n                            >\r\n                                Сервис не может работать с выключенными Cookie <br /> или в режиме инкогнито\r\n                            </Placeholder>\r\n                        </SplitCol>\r\n                    </SplitLayout>\r\n                </AppRoot>\r\n            </AdaptivityProvider>\r\n        </ConfigProvider>\r\n    );\r\n};\r\n\r\nexport default CookiePlaceholder","import React, { Suspense, lazy } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport {\n  \tAdaptivityProvider,\n\tConfigProvider,\n\tAppRoot,\n    ScreenSpinner,\n    usePlatform,\n    VKCOM,\n    useAppearance\n} from \"@vkontakte/vkui\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\nimport \"./styles/styles.css\"\nimport ErrorBoundary from \"./components/error_panels/errorBoundary\";\nimport CookiePlaceholder from \"./components/error_panels/cookiePlaceholder\";\nimport { СontextProvider } from './context/context'\nimport axios from \"axios\";\n\nconst App = lazy(() => import('./App'))\n\nconst Index = () => {\n    const platform = usePlatform()\n    const appearance = useAppearance()\n    return (\n        <СontextProvider>\n            <ConfigProvider appearance={appearance} platform={platform === VKCOM ? \"android\" : platform}>\n                <AdaptivityProvider>\n                    <AppRoot>\n                        <ErrorBoundary>\n                            <Suspense fallback={<ScreenSpinner/>}>\n                                <App/>\n                            </Suspense>\n                        </ErrorBoundary>\n                    </AppRoot>\n                </AdaptivityProvider>\n            </ConfigProvider>\n        </СontextProvider>\n    );\n};\n\ntry {\n    localStorage.setItem('test', 'test')\n    sessionStorage.setItem(\"groupsFavorite\", JSON.stringify([]))\n    sessionStorage.setItem(\"teachersFavorite\", JSON.stringify([]))\n    bridge\n        .send(\"VKWebAppStorageGet\", { \"keys\": [\"groupsFavorite\", \"teachersFavorite\"] })\n        .then(e => {\n            console.log(e);\n            if (e.keys[0].value) {\n                sessionStorage.setItem(\"groupsFavorite\", e.keys[0].value)\n            }\n            if (e.keys[1].value) {\n                sessionStorage.setItem(\"teachersFavorite\", e.keys[1].value)\n            }\n\n            history.pushState({\n                activeStory: \"favorites\",\n                searchValue: \"\",\n                isSearch: false,\n                favorites_activePanel: \"favorites-list\",\n                body_overflow: \"visible\"\n            }, \"\")\n\n            bridge.send(\"VKWebAppInit\");\n\n            axios\n                .get(\"https://iis.bsuir.by/api/v1/schedule/current-week\")\n                .then(response => {\n                    sessionStorage.setItem(\"week\", JSON.stringify(response.data))\n                    ReactDOM.render(<Index />, document.getElementById(\"root\"));\n                })\n        })\n    // history.pushState({\n    //     activeStory: \"favorites\",\n    //     searchValue: \"\",\n    //     isSearch: false,\n    //     favorites_activePanel: \"favorites-list\",\n    //     body_overflow: \"visible\"\n    // }, \"\")\n    // ReactDOM.render(<Index/>, document.getElementById(\"root\"));\n} catch {\n    ReactDOM.render(<CookiePlaceholder/>, document.getElementById(\"root\"));\n}\n\nimport(\"./eruda\").then(({ default: eruda }) => { }); //runtime download\n\n// if (process.env.NODE_ENV === \"development\") {\n// \timport(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n// }\n","import { useEffect, useState } from \"react\"\r\n\r\nexport const useLocalStorage = (initialValue, key) => {\r\n    const getValue = () => {\r\n        const storage = localStorage.getItem(key)\r\n        if (storage) {\r\n            return JSON.parse(storage)\r\n        }\r\n        return initialValue\r\n    }\r\n\r\n    const [value, setValue] = useState(getValue)\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(key, JSON.stringify(value))\r\n    }, value)\r\n\r\n    return [value, setValue]\r\n}","import { Icon16CancelCircleOutline } from \"@vkontakte/icons\"\r\nimport { Snackbar } from \"@vkontakte/vkui\"\r\n\r\nexport const ErrorSnackbar = ({ message, setSnackbar }) => {\r\n    return (\r\n        <Snackbar\r\n            onClose={() => { setSnackbar(null) }}\r\n            before={<Icon16CancelCircleOutline fill=\"var(--dynamic_red)\" width={24} height={24} />}\r\n            duration={1700}\r\n        >\r\n            {message}\r\n        </Snackbar>\r\n    )\r\n}","import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport bridge from \"@vkontakte/vk-bridge\"\r\nimport { ErrorSnackbar } from \"../components/alerts/errorSnackbar\";\r\nimport { useLocalStorage } from \"../hooks/useLocalStorage\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = createContext()\r\n\r\nexport const useContextProvider = () => {\r\n    return useContext(Context)\r\n}\r\n\r\nexport const СontextProvider = ({ children }) => {\r\n    const [favoriteGroups, setFavoritesGroups] = useState(JSON.parse(sessionStorage.getItem(\"groupsFavorite\")))\r\n    const [favoriteTeachers, setFavoritesTeachers] = useState(JSON.parse(sessionStorage.getItem(\"teachersFavorite\")))\r\n\r\n    const [refreshGroupsErrorSnackbar, setRefreshGroupsErrorSnackbar] = useState(null)\r\n    const [refreshTeachersErrorSnackbar, setRefreshTeachersErrorSnackbar] = useState(null)\r\n\r\n    const [toggleGroupFavoriteFlagSnackbar, setToggleGroupFavoriteFlagSnackbar] = useState(null)\r\n    const [toggleTeachreFavoriteFlagSnackbar, setToggleTeacherFavoriteFlagSnackbar] = useState(null)\r\n\r\n    const [groups, setGroups] = useLocalStorage(null, \"groups\")\r\n    const [teachers, setTeachers] = useLocalStorage(null, \"teachers\")\r\n\r\n    const [loadGroupsController] = useState(new AbortController())\r\n    const [loadTeachersController] = useState(new AbortController())\r\n\r\n    const [errorLoadingGroupList, setErrorLoadingGroupList] = useState(false)\r\n    const [errorLoadingTeachersList, setErrorLoadingTeachersList] = useState(false)\r\n\r\n    const [fetchingGroups, setFetchingGroups] = useState(false)\r\n    const [fetchingTeachers, setFetchingTeachers] = useState(false)\r\n\r\n    const [reload, setReload] = useState(false)\r\n    \r\n    useEffect(() => {\r\n        if (!groups) {\r\n            axios\r\n                .get(\"https://iis.bsuir.by/api/v1/student-groups\", {\r\n                    signal: loadGroupsController.signal\r\n                })\r\n                .then(response => {\r\n                    setGroups(response.data)\r\n                })\r\n                .catch(() => {\r\n                    setErrorLoadingGroupList(true)\r\n                })\r\n        }\r\n    }, [,reload])\r\n\r\n    useEffect(() => {\r\n        if (!teachers) {\r\n            axios\r\n                .get(\"https://iis.bsuir.by/api/v1/employees/all\", {\r\n                    signal: loadTeachersController.signal\r\n                })\r\n                .then(response => {\r\n                    const data = response.data.map(e => {\r\n                        e.fullName = e.lastName + \" \" + e.firstName + \" \" + e.middleName\r\n                        return e\r\n                    })\r\n                    setTeachers(data)\r\n                })\r\n                .catch(() => {\r\n                    setErrorLoadingTeachersList(true)\r\n                })\r\n        }\r\n    }, [,reload])\r\n\r\n    const onReload = () => {\r\n        setErrorLoadingTeachersList(false)\r\n        setErrorLoadingGroupList(false)\r\n        setReload(!reload)\r\n    }\r\n\r\n    const onGroupRefresh = () => {\r\n        setFetchingGroups(true)\r\n        axios\r\n            .get(\"https://iis.bsuir.by/api/v1/student-groups\")\r\n            .then(response => {\r\n                setGroups(response.data)\r\n                setErrorLoadingGroupList(false)\r\n                setFetchingGroups(false)\r\n            })\r\n            .catch(() => {\r\n                setFetchingGroups(false)\r\n                setRefreshGroupsErrorSnackbar(<ErrorSnackbar message={\"Не удалось обновить список групп\"} setSnackbar={setRefreshGroupsErrorSnackbar} />)\r\n            })\r\n    }\r\n\r\n    const onTeachersRefresh = () => {\r\n        setFetchingTeachers(true)\r\n        axios\r\n            .get(\"https://iis.bsuir.by/api/v1/employees/all\")\r\n            .then(response => {\r\n                const data = response.data.map(e => {\r\n                    e.fullName = e.lastName + \" \" + e.firstName + \" \" + e.middleName\r\n                    return e\r\n                })\r\n                setTeachers(data)\r\n                setErrorLoadingTeachersList(false)\r\n                setFetchingTeachers(false)\r\n            })\r\n            .catch(() => {\r\n                setFetchingTeachers(false)\r\n                setRefreshTeachersErrorSnackbar(<ErrorSnackbar message={\"Не удалось обновить список преподавателей\"} setSnackbar={setRefreshTeachersErrorSnackbar} />)\r\n            })\r\n    }\r\n\r\n    const toggleGroupsFavoriteFlag = groupName => {\r\n        let favoriteGroupsTemp = [...favoriteGroups]\r\n        let errorMessage = \"\"\r\n        if (favoriteGroupsTemp.includes(groupName)) {\r\n            favoriteGroupsTemp.splice(favoriteGroupsTemp.indexOf(groupName), 1)\r\n            errorMessage = 'Не удалось удалить группу из \"Избранное\"'\r\n        } else {\r\n            favoriteGroupsTemp.push(groupName)\r\n            errorMessage = 'Не удалось добавить группу в \"Избранное\"'\r\n        }\r\n\r\n        bridge\r\n            .send(\"VKWebAppStorageSet\", { \"key\": \"groupsFavorite\", \"value\": JSON.stringify(favoriteGroupsTemp) })\r\n            .then(() => {\r\n                setFavoritesGroups(favoriteGroupsTemp)\r\n            })\r\n            .catch(() => {\r\n                setToggleGroupFavoriteFlagSnackbar(<ErrorSnackbar message={errorMessage} setSnackbar={setToggleGroupFavoriteFlagSnackbar}/>)\r\n            })\r\n    }\r\n\r\n    const toggleTeachersFavoriteFlag = teacherID => {\r\n        let favoriteTeachersTemp = [...favoriteTeachers]\r\n        let errorMessage = \"\"\r\n        if (favoriteTeachersTemp.includes(teacherID)) {\r\n            favoriteTeachersTemp.splice(favoriteTeachersTemp.indexOf(teacherID), 1)\r\n            errorMessage = 'Не удалось удалить преподавателя из \"Избранное\"' \r\n        } else {\r\n            favoriteTeachersTemp.push(teacherID)\r\n            errorMessage = 'Не удалось добавить преподавателя в \"Избранное\"' \r\n        }\r\n\r\n        bridge\r\n            .send(\"VKWebAppStorageSet\", { \"key\": \"teachersFavorite\", \"value\": JSON.stringify(favoriteTeachersTemp) })\r\n            .then(() => {\r\n                setFavoritesTeachers(favoriteTeachersTemp)\r\n            })\r\n            .catch(() => {\r\n                setToggleTeacherFavoriteFlagSnackbar(<ErrorSnackbar message={errorMessage} setSnackbar={setToggleTeacherFavoriteFlagSnackbar} />)\r\n            })\r\n    }\r\n\r\n    const closeSnackbars = () => {\r\n        setRefreshGroupsErrorSnackbar(null)\r\n        setToggleGroupFavoriteFlagSnackbar(null)\r\n        setToggleTeacherFavoriteFlagSnackbar(null)\r\n        setRefreshTeachersErrorSnackbar(null)\r\n    }\r\n\r\n    return (\r\n        <Context.Provider value={{\r\n            favoriteGroups,\r\n            favoriteTeachers,\r\n            groups,\r\n            teachers,\r\n            errorLoadingGroupList,\r\n            errorLoadingTeachersList,\r\n            fetchingGroups,\r\n            fetchingTeachers,\r\n            toggleGroupsFavoriteFlag,\r\n            toggleTeachersFavoriteFlag,\r\n            onGroupRefresh,\r\n            onTeachersRefresh,\r\n            toggleGroupFavoriteFlagSnackbar,\r\n            toggleTeachreFavoriteFlagSnackbar,\r\n            refreshGroupsErrorSnackbar,\r\n            refreshTeachersErrorSnackbar,\r\n            closeSnackbars,\r\n            onReload\r\n        }}>\r\n            { children }\r\n        </Context.Provider>\r\n    )\r\n}  "],"sourceRoot":""}