{"version":3,"sources":["lists/groupsList.js"],"names":["GroupList","useState","search","setSearch","load","setLoad","fail","setFail","groups","setGroups","groupsResult","setGroupsResult","useEffect","searchValue","toLowerCase","filter","name","indexOf","sessionStorage","getItem","JSON","parse","axios","get","then","response","setItem","stringify","data","catch","window","addEventListener","scrollHandler","removeEventListener","e","vertical","readOnly","value","onChange","target","after","style","paddingTop","length","map","group","id"],"mappings":"iKAoFeA,UA/Ef,WAEI,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAwBF,oBAAS,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAwBJ,oBAAS,GAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAA4BN,mBAAS,IAArC,mBAAOO,EAAP,KAAeC,EAAf,KACA,EAAwCR,mBAAS,IAAjD,mBAAOS,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACN,IAAMC,EAAcX,EAAOY,cAC3BH,EAAgBH,EAAOO,QACnB,qBAAGC,KAAgBF,cAAcG,QAAQJ,IAAgB,QAE9D,CAACX,IAEJU,qBAAU,WACN,IAAMC,EAAcX,EAAOY,cAC3BH,EAAgBH,EAAOO,QACnB,qBAAGC,KAAgBF,cAAcG,QAAQJ,IAAgB,QAE9D,CAACL,IAEJI,qBAAU,WACFM,eAAeC,QAAQ,WACvBV,EAAUW,KAAKC,MAAMH,eAAeC,QAAQ,YAC5Cd,GAAQ,IAERiB,IACKC,IAAI,0CACJC,MAAK,SAAAC,GACFP,eAAeQ,QAAQ,SAAUN,KAAKO,UAAUF,EAASG,OACzDnB,EAAUgB,EAASG,MACnBvB,GAAQ,MAEXwB,OAAM,WACHtB,GAAQ,QAGrB,IAEHK,qBAAU,WAEN,OADAkB,OAAOC,iBAAiB,SAAUC,GAC3B,WACHF,OAAOG,oBAAoB,SAAUD,MAE1C,IAEH,IAAMA,EAAgB,SAACE,KAIvB,OACI,iCACI,cAAC,IAAD,CAAaC,SAAS,MAAtB,SACI,cAAC,IAAD,CACIC,UAAWhC,EACXiC,MAAOnC,EACPoC,SAAU,SAACJ,GAAQ/B,EAAU+B,EAAEK,OAAOF,QACtCG,MAAO,SAGf,eAAC,IAAD,CAAOC,MAAO,CAAEC,WAAY,IAA5B,WACMtC,IAASE,GAAQ,cAAC,IAAD,IAClBF,GAAQM,EAAaiC,OAAS,GAC3BjC,EAAakC,KAAI,SAACC,GAAD,OACb,cAAC,IAAD,CAEIL,MAAO,cAAC,IAAD,UAAY,cAAC,IAAD,MAFvB,SAIKK,EAAM7B,MAHF6B,EAAMC,OAMtB1C,GAAgC,IAAxBM,EAAaiC,QAAgB,cAAC,IAAD,2GACrCrC,GAAQ,cAAC,IAAD","file":"static/js/5.b238ce62.chunk.js","sourcesContent":["import { Icon28FavoriteOutline } from \"@vkontakte/icons\"\r\nimport { FixedLayout, Footer, Group, IconButton, PanelSpinner, Placeholder, Search, SimpleCell } from \"@vkontakte/vkui\"\r\nimport axios from \"axios\"\r\nimport { useEffect, useState } from \"react\"\r\n\r\nfunction GroupList() {\r\n\r\n    const [search, setSearch] = useState(\"\")\r\n    const [load, setLoad] = useState(false)\r\n    const [fail, setFail] = useState(false)\r\n    const [groups, setGroups] = useState([])\r\n    const [groupsResult, setGroupsResult] = useState([])\r\n\r\n    useEffect(() => {\r\n        const searchValue = search.toLowerCase();\r\n        setGroupsResult(groups.filter(\r\n            ({ name }) => name.toLowerCase().indexOf(searchValue) > -1\r\n        ))\r\n    }, [search])\r\n\r\n    useEffect(() => {\r\n        const searchValue = search.toLowerCase();\r\n        setGroupsResult(groups.filter(\r\n            ({ name }) => name.toLowerCase().indexOf(searchValue) > -1\r\n        ))\r\n    }, [groups])\r\n\r\n    useEffect(() => {\r\n        if (sessionStorage.getItem(\"groups\")) {\r\n            setGroups(JSON.parse(sessionStorage.getItem(\"groups\")))\r\n            setLoad(true)\r\n        } else {\r\n            axios\r\n                .get(\"https://journal.bsuir.by/api/v1/groups\")\r\n                .then(response => {\r\n                    sessionStorage.setItem(\"groups\", JSON.stringify(response.data))\r\n                    setGroups(response.data)\r\n                    setLoad(true)\r\n                })\r\n                .catch(() => {\r\n                    setFail(true)\r\n                })\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", scrollHandler)\r\n        return function () {\r\n            window.removeEventListener(\"scroll\", scrollHandler)\r\n        }\r\n    }, [])\r\n\r\n    const scrollHandler = (e) => {\r\n\r\n    }\r\n\r\n    return (\r\n        <span>\r\n            <FixedLayout vertical=\"top\">\r\n                <Search \r\n                    readOnly={!load}\r\n                    value={search}\r\n                    onChange={(e) => { setSearch(e.target.value) } }\r\n                    after={null}\r\n                />\r\n            </FixedLayout>\r\n            <Group style={{ paddingTop: 40}}>\r\n                {!load && !fail && <PanelSpinner />}\r\n                {load && groupsResult.length > 0 &&\r\n                    groupsResult.map((group) => (\r\n                        <SimpleCell\r\n                            key={group.id}\r\n                            after={<IconButton><Icon28FavoriteOutline /></IconButton>}\r\n                        >\r\n                            {group.name}\r\n                        </SimpleCell>\r\n                    ))}\r\n                {load && groupsResult.length === 0 && <Footer>Ничего не найдено</Footer>}\r\n                {fail && <Placeholder>Не удалось загрузить список групп</Placeholder>}\r\n            </Group>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default GroupList"],"sourceRoot":""}